{"version":3,"sources":["components/EventTable.module.scss","api.ts","components/Header.tsx","Util.ts","components/FFlagTextLink.tsx","components/FFlagTypeChip.tsx","components/FFlagTable.tsx","components/FFlagData.tsx","components/LifecycleChip.tsx","components/Utterances.tsx","components/EventTable.tsx","App.tsx","pages/Browser.tsx","pages/History.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","grid","left","right","HistoryEventType","Header","_this","this","react_default","a","createElement","AppBar_default","color","position","style","flexGrow","Toolbar_default","Typography_default","variant","Tabs_default","value","props","pages","findIndex","page","path","location","pathname","includes","activePath","map","Tab_default","label","title","onClick","history","push","key","Component","withRouter","endpoint","str","allSeries","stripUndefined","obj","Object","entries","forEach","_ref","_ref2","slicedToArray","undefined","getFlags","_x","_getFlags","apply","arguments","_callee","series","regenerator_default","wrap","_context","prev","next","fetch","concat","abrupt","sent","json","stop","getHistory","_x2","_x3","_getHistory","_callee2","flag","query","_context2","querystring","stringify","flagTypes","FFlag","DFFlag","SFFlag","FInt","FString","FLog","DFInt","DFString","DFLog","getFlagType","typeEntry","find","prefix","startsWith","_typeEntry","type","name","slice","length","FFlagTextLink","Link_default","component","p","react_router_dom","assign","to","underline","fontSize","borderBottom","typeStyles","red","LooksOne_default","TextFormat_default","indigo","List_default","blue","Sync_default","deepOrange","SettingsRemote_default","teal","Flag_default","getColor","getIcon","_ref3","makeTheme","memoize","theme","createMuiTheme","FFlagTypeChip","styles","typography","useNextVariants","palette","primary","main","Chip_default","icon","FFlagTable","dist_default","data","flags","currentValue","lastUpdated","Date","toISOString","columns","options","customBodyRender","download","filter","display","searchable","noWrap","fontFamily","whiteSpace","wordBreak","filterOptions","sortDirection","Tooltip_default","toLocaleString","react_moment_dist_default","fromNow","selectableRows","rowsPerPage","rowsPerPageOptions","Infinity","print","filterType","customToolbar","react","IconButton_default","refresh","Refresh_default","FormControl_default","marginLeft","InputLabel_default","htmlFor","Select_default","onChange","e","setSeries","target","input","Input_default","id","MenuItem_default","FFlagData","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","getData","setState","asyncToGenerator","mark","t0","_this2","t1","t2","_this3","Fragment","children","index_es","marginTop","green","Add_default","yellow","Edit_default","Remove_default","LifecycleChip","Utterances","ref","React","createRef","term","script","document","src","async","setAttribute","current","appendChild","EventTable","events","padding","ArrowBack_default","inline","verticalAlign","className","single","meta","rowData","event","time","sort","Utterances_Utterances","secondary","FFlagData_FFlagData","FFlagTable_FFlagTable","match","EventTable_EventTable","params","App","CssBaseline_default","components_Header","react_router","exact","Boolean","window","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12593a9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"EventTable_grid__28v1h\",\"left\":\"EventTable_left__20GBs\",\"right\":\"EventTable_right__2fBSa\"};","import querystring from 'querystring'\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n  ? '/'\n  : 'http://localhost:8080/'\n\nconst endpoint = (str: string) => BASE_URL + str\n\nexport const allSeries = [\n  'ClientAppSettings',\n  'StudioAppSettings',\n  'WindowsBootstrapperSettings',\n  'AndroidAppSettings',\n  'iOSAppSettings',\n  'XboxAppSettings'\n]\n\nexport enum HistoryEventType {\n  Created = 'Created',\n  Removed = 'Removed',\n  Changed = 'Changed'\n}\n\nexport interface Flag {\n  flag: string\n  currentValue?: string\n  lastUpdated?: number\n}\n\nexport interface HistoryEvent {\n  time: number\n  type: HistoryEventType\n  flag: string\n  series: string\n  value?: string\n}\n\nconst stripUndefined = (obj: {[index: string]: any}) => {\n  Object.entries(obj).forEach(([key, value]) => {\n    if (value === undefined) {\n      delete obj[key]\n    }\n  })\n\n  return obj\n}\n\nexport async function getFlags (series: string): Promise<Flag[]> {\n  return (await fetch(endpoint(`flags/${series}`))).json()\n}\n\nexport async function getHistory (series?: string, flag?: string): Promise<HistoryEvent[]> {\n  const query = querystring.stringify(stripUndefined({\n    series, flag\n  }))\n\n  return (await fetch(endpoint(`events?${query}`))).json()\n}\n","import AppBar from '@material-ui/core/AppBar'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport React, { Component } from 'react'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { Page } from '../App'\nimport styles from './Header.module.scss'\n\ninterface HeaderProps extends RouteComponentProps<any> {\n  pages: Page[]\n}\n\nclass Header extends Component<HeaderProps> {\n  render () {\n    return (\n      <AppBar color='primary' position='static' style={{\n        flexGrow: 1\n      }}>\n        <Toolbar>\n          <Typography variant='h6'>\n            Roblox FFlag Watcher\n          </Typography>\n        </Toolbar>\n        <Tabs value={this.props.pages.findIndex(page => (\n          page.path === '/'\n            ? this.props.location.pathname === '/'\n            : this.props.location.pathname.includes(page.activePath || page.path)\n        ))}>\n          {this.props.pages.map(page => (\n            <Tab\n              label={page.title}\n              onClick={() => this.props.history.push(page.activePath || page.path)}\n              key={page.path}\n            />\n          ))}\n        </Tabs>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","const flagTypes = {\n  FFlag: 'Flag',\n  DFFlag: 'Dynamic Flag',\n  SFFlag: 'Synced Flag',\n  FInt: 'Int',\n  FString: 'String',\n  FLog: 'Log',\n  DFInt: 'Dynamic Int',\n  DFString: 'Dynamic String',\n  DFLog: 'Dynamic Log'\n}\n\ninterface FlagType {\n  type?: string\n  name: string\n}\n\nexport function getFlagType (flag: string): FlagType {\n  const typeEntry = Object.entries(flagTypes).find(([prefix]) => flag.startsWith(prefix))\n\n  if (typeEntry) {\n    const [prefix, type] = typeEntry\n\n    return {\n      type,\n      name: flag.slice(prefix.length)\n    }\n  }\n\n  return {\n    name: flag\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { getFlagType } from '../Util'\n\nexport default function FFlagTextLink (flag: string, series: string) {\n  return (\n    <Link\n      component={\n        (p: any) => <RouterLink to={`/history/${series}/${flag}`} {...p} />\n      }\n      color='inherit'\n      underline='none'\n      style={{\n        fontSize: 14,\n        borderBottom: '1px dotted silver'\n      }}\n    >\n      {getFlagType(flag).name}\n    </Link>\n  )\n}\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core'\nimport Chip from '@material-ui/core/Chip'\nimport blue from '@material-ui/core/colors/blue'\nimport deepOrange from '@material-ui/core/colors/deepOrange'\nimport indigo from '@material-ui/core/colors/indigo'\nimport red from '@material-ui/core/colors/red'\nimport teal from '@material-ui/core/colors/teal'\nimport Sync from '@material-ui/icons/Sync'\nimport List from '@material-ui/icons/List'\nimport LooksOne from '@material-ui/icons/LooksOne'\nimport SettingsRemote from '@material-ui/icons/SettingsRemote'\nimport TextFormat from '@material-ui/icons/TextFormat'\nimport Flag from '@material-ui/icons/Flag'\nimport React from 'react'\nimport memoize from 'fast-memoize'\n\nconst typeStyles: [string, typeof blue, JSX.Element][] = [\n  ['Dynamic Int', red, <LooksOne />],\n  ['Dynamic String', red, <TextFormat />],\n  ['Int', indigo, <LooksOne />],\n  ['Log', indigo, <List />],\n  ['String', indigo, <TextFormat />],\n  ['Synced', blue, <Sync />],\n  ['Dynamic', deepOrange, <SettingsRemote />],\n  ['Flag', teal, <Flag />]\n]\n\nconst getColor = (name: string) => (typeStyles.find(([color]) => name.includes(color)) || [])[1]\n\nconst getIcon = (name: string) => (typeStyles.find(([color]) => name.includes(color)) || [])[2]\n\nconst makeTheme = memoize((theme: any) => createMuiTheme(theme))\n\nexport default function FFlagTypeChip (type: string) {\n  return type && type.length > 0 ?\n    <MuiThemeProvider theme={makeTheme({\n      typography: {\n        useNextVariants: true\n      },\n      palette: {\n        primary: getColor(type) || {\n          main: '#ccc'\n        }\n      }\n    })}>\n      <Chip\n        label={type}\n        color='primary'\n        icon={getIcon(type)}\n      />\n    </MuiThemeProvider>\n  : ''\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport IconButton from '@material-ui/core/IconButton'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport MUIDataTable from 'mui-datatables'\nimport React, { Component, Fragment } from 'react'\nimport Moment from 'react-moment'\nimport { allSeries, Flag } from '../api'\nimport { getFlagType } from '../Util'\nimport { FFlagDataCallbacks } from './FFlagData'\nimport FFlagTextLink from './FFlagTextLink'\nimport FFlagTypeChip from './FFlagTypeChip'\n\nexport interface FFlagTableProps {\n  flags: Flag[]\n  series: string\n}\n\nconst columns = (props: FFlagTableProps) => [\n  {\n    name: 'Type',\n    options: {\n      customBodyRender: FFlagTypeChip,\n      download: false\n    }\n  },\n  {\n    name: 'Flag',\n    options: {\n      filter: false,\n      download: false,\n      customBodyRender: (flag: string) => FFlagTextLink(flag, props.series)\n    }\n  },\n  {\n    name: 'Full Name',\n    options: {\n      filter: false,\n      display: false,\n      searchable: true\n    }\n  },\n  {\n    name: 'Value',\n    options: {\n      customBodyRender: (value: string) => (\n        <Typography noWrap={true} style={{\n          fontFamily: 'monospace',\n          fontSize: 14,\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-all'\n        }}>{value}</Typography>\n      ),\n      filterOptions: ['True', 'False']\n    }\n  },\n  {\n    name: 'Last Changed',\n    options: {\n      filter: false,\n      sortDirection: 'desc',\n      searchable: false,\n      customBodyRender: (value: string) => (\n        value.length > 0\n          ? <Tooltip title={new Date(value).toLocaleString()}>\n              <Moment fromNow>{value}</Moment>\n            </Tooltip>\n          : <Tooltip title='Created before tracking began'>\n              <Typography style={{\n                color: 'silver'\n              }}>unknown</Typography>\n            </Tooltip>\n      )\n    }\n  }\n]\n\nexport default class FFlagTable extends Component<FFlagTableProps & FFlagDataCallbacks> {\n  render () {\n    return (\n      <MUIDataTable\n        title='Fast Flags'\n        data={this.props.flags.map(flag => {\n          const { type } = getFlagType(flag.flag)\n\n          return [\n            type || '',\n            flag.flag,\n            flag.flag,\n            flag.currentValue || '',\n            flag.lastUpdated ? new Date(flag.lastUpdated).toISOString() : ''\n          ]\n        })}\n        columns={columns(this.props) as any}\n        options={{\n          selectableRows: false,\n          rowsPerPage: 30,\n          rowsPerPageOptions: [10, 30, 50, 100, 300, 500, 1000, Infinity],\n          print: false,\n          filterType: 'multiselect',\n          customToolbar: () => (\n            <Fragment>\n              <IconButton onClick={this.props.refresh}>\n                <RefreshIcon />\n              </IconButton>\n              <FormControl style={{\n                marginLeft: 10\n              }}>\n                <InputLabel htmlFor='series'>Platform/Application</InputLabel>\n                <Select\n                  value={this.props.series}\n                  onChange={(e) => this.props.setSeries(e.target.value)}\n                  input={\n                    <Input name='series' id='series' />\n                  }\n                >\n                {allSeries.map((series) => (\n                  <MenuItem value={series}>{series}</MenuItem>\n                ))}\n                </Select>\n              </FormControl>\n            </Fragment>\n          )\n        }}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { getFlags, Flag, allSeries } from '../api'\nimport { LinearProgress } from '@material-ui/core'\nimport { FFlagTableProps } from './FFlagTable'\n\nexport interface FFlagDataCallbacks {\n  refresh: () => any\n  setSeries: (series: string) => any\n}\n\ninterface FFlagDataProps {\n  children: (options: FFlagTableProps & FFlagDataCallbacks) => JSX.Element\n}\n\ninterface FFlagDataState {\n  flags?: Flag[]\n  series: string\n}\n\nexport default class FFlagData extends Component<FFlagDataProps, FFlagDataState> {\n  constructor (props: FFlagDataProps) {\n    super(props)\n\n    this.state = {\n      series: allSeries[0]\n    }\n  }\n\n  async componentDidMount () {\n    return this.getData()\n  }\n\n  async getData () {\n    this.setState({\n      flags: undefined\n    }, async () => {\n      this.setState({\n        flags: await getFlags(this.state.series)\n      })\n    })\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        {\n          this.state.flags\n            ? this.props.children({\n              flags: this.state.flags,\n              series: this.state.series,\n              refresh: () => this.getData(),\n              setSeries: (series) => this.setState({ series }, this.getData)\n            })\n            : (\n              <LinearProgress style={{\n                marginTop: 2\n              }} />\n            )\n        }\n      </React.Fragment>\n    )\n  }\n}\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core'\nimport Chip from '@material-ui/core/Chip'\nimport blue from '@material-ui/core/colors/blue'\nimport green from '@material-ui/core/colors/green'\nimport red from '@material-ui/core/colors/red'\nimport yellow from '@material-ui/core/colors/yellow'\nimport Add from '@material-ui/icons/Add'\nimport Edit from '@material-ui/icons/Edit'\nimport Remove from '@material-ui/icons/Remove'\nimport memoize from 'fast-memoize'\nimport React from 'react'\n\nconst typeStyles: [string, typeof blue, JSX.Element][] = [\n  ['Created', green, <Add />],\n  ['Changed', yellow, <Edit />],\n  ['Removed', red, <Remove />]\n]\n\nconst getColor = (name: string) => (typeStyles.find(([color]) => name.includes(color)) || [])[1]\n\nconst getIcon = (name: string) => (typeStyles.find(([color]) => name.includes(color)) || [])[2]\n\nconst makeTheme = memoize((theme: any) => createMuiTheme(theme))\n\nexport default function LifecycleChip (type: string) {\n  return type && type.length > 0 ?\n    <MuiThemeProvider theme={makeTheme({\n      typography: {\n        useNextVariants: true\n      },\n      palette: {\n        primary: getColor(type) || {\n          main: '#ccc'\n        }\n      }\n    })}>\n      <Chip\n        label={type}\n        color='primary'\n        icon={getIcon(type)}\n      />\n    </MuiThemeProvider>\n  : ''\n}\n","import React from 'react'\n\ninterface UtterancesProps {\n  term: string\n}\n\nexport default class Utterances extends React.Component<UtterancesProps> {\n  private ref: any\n\n  constructor (props: UtterancesProps) {\n    super(props)\n\n    this.ref = React.createRef()\n  }\n\n  componentDidMount () {\n    const { term } = this.props\n\n    const script = document.createElement('script')\n    script.src = 'https://utteranc.es/client.js'\n    script.async = true\n    script.setAttribute('repo', 'evaera/Roblox-FFlag-Watcher')\n    script.setAttribute('crossorigin', 'anonymous')\n    script.setAttribute('label', 'comment')\n    script.setAttribute('theme', 'github-dark')\n    script.setAttribute('issue-term', term)\n\n    this.ref.current.appendChild(script)\n  }\n\n  render () {\n    return <div ref={this.ref}></div>\n  }\n}\n","import { LinearProgress } from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport MUIDataTable from 'mui-datatables'\nimport React, { Component } from 'react'\nimport Moment from 'react-moment'\nimport { Link } from 'react-router-dom'\nimport { getHistory, HistoryEvent } from '../api'\nimport FFlagTextLink from './FFlagTextLink'\nimport LifecycleChip from './LifecycleChip'\nimport Utterances from './Utterances'\nimport styles from './EventTable.module.scss'\n\ninterface EventTableProps {\n  series?: string\n  flag?: string\n}\n\ninterface EventTableState {\n  events?: HistoryEvent[]\n}\n\nconst columns = (single: boolean) => [\n  {\n    name: 'Event',\n    options: {\n      customBodyRender: LifecycleChip\n    }\n  },\n  {\n    name: 'Series',\n    options: {\n      display: !single\n    }\n  },\n  {\n    name: 'Flag',\n    options: {\n      display: !single,\n      customBodyRender: (flag: string, meta: any) => (\n        FFlagTextLink(flag, meta.rowData[1])\n      )\n    }\n  },\n  {\n    name: 'Value',\n    options: {\n      customBodyRender: (value: string) => (\n        <Typography noWrap={true} style={{\n          fontFamily: 'monospace',\n          fontSize: 14,\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-all'\n        }}>{value}</Typography>\n      ),\n      filterOptions: ['True', 'False']\n    }\n  },\n  {\n    name: 'Time',\n    options: {\n      customBodyRender: (value: string) => (\n        <Tooltip title={new Date(value).toLocaleString()}>\n          <Moment fromNow>{value}</Moment>\n        </Tooltip>\n      )\n    }\n  }\n]\n\nexport default class EventTable extends Component<EventTableProps, EventTableState> {\n  constructor (props: EventTableProps) {\n    super(props)\n\n    this.state = {}\n  }\n\n  async componentDidMount () {\n    return this.getData()\n  }\n\n  async getData () {\n    this.setState({\n      events: undefined\n    }, async () => {\n      this.setState({\n        events: await getHistory(this.props.series, this.props.flag)\n      })\n    })\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        {this.props.series && (\n          <div style={{\n            padding:  20\n          }}>\n            <Link\n              to='/history'\n            >\n              <IconButton>\n                <BackIcon />\n              </IconButton>\n            </Link>\n            <Typography\n              variant='h5'\n              inline={true}\n              style={{\n                verticalAlign: 'middle',\n                marginLeft: 10\n              }}\n            >\n            {`${this.props.flag || this.props.series} `}\n            {this.props.flag && (\n              <small style={{\n                color: '#999'\n              }}>{this.props.series}</small>\n            )}\n            </Typography>\n          </div>\n        )}\n        <div className={`${this.props.flag && styles.grid}`}>\n          <div className={styles.left}>\n          {\n            this.state.events\n              ? <MUIDataTable\n                title='Event History'\n                columns={columns(!!this.props.flag) as any}\n                data={this.state.events.map(event => [\n                  event.type,\n                  event.series,\n                  event.flag,\n                  event.value || '',\n                  event.time\n                ])}\n                options={{\n                  selectableRows: false,\n                  sort: false,\n                  print: false,\n                  rowsPerPage: 100\n                }}\n              />\n              : (\n                <LinearProgress style={{\n                  marginTop: 2\n                }} />\n              )\n          }\n          </div>\n          { this.props.flag && <div className={styles.right}>\n            <Utterances\n              term={`${this.props.series}: \"${this.props.flag}\"`}\n            />\n          </div>}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css'\nimport Header from './components/Header'\nimport Browser from './pages/Browser'\nimport History from './pages/History'\n\nexport const theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#ab47bc'\n    },\n    secondary: {\n      main: '#f48fb1'\n    }\n  }\n})\n\nexport interface Page {\n  path: string,\n  component: (...args: any[]) => JSX.Element,\n  title: string\n  activePath?: string\n}\n\nconst pages: Page[] = [\n  {\n    path: '/',\n    component: Browser,\n    title: 'Browser'\n  },\n  {\n    path: '/history/:series?/:flag?',\n    activePath: '/history',\n    component: History,\n    title: 'History'\n  }\n]\n\nclass App extends Component {\n  render () {\n    return (\n      <Router>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Header pages={pages} />\n          {pages.map(page => (\n            <Route\n              exact={page.path === '/'}\n              path={page.path}\n              component={page.component}\n              key={page.path}\n            />\n          ))}\n        </MuiThemeProvider>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","import Grid from '@material-ui/core/Grid'\nimport FFlagTable from '../components/FFlagTable'\nimport FFlagData from '../components/FFlagData'\nimport React from 'react'\n\nexport default function Browser () {\n  return (\n    <FFlagData>\n      {(options) => (\n        <FFlagTable {...options} />\n      )}\n    </FFlagData>\n  )\n}\n","import React from 'react'\nimport EventTable from '../components/EventTable'\nimport { match } from 'react-router-dom'\n\ninterface HistoryParams {\n  series?: string\n  flag?: string\n}\n\nexport default function History ({ match }: { match: match<HistoryParams> }) {\n  return (\n    <EventTable\n      series={match.params.series}\n      flag={match.params.flag}\n      key={`${match.params.series}:${match.params.flag}`}\n    />\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}