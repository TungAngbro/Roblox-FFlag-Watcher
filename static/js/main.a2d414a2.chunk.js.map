{"version":3,"sources":["components/EventTable.module.scss","pages/About.module.scss","api.ts","components/Header.tsx","Util.ts","components/FFlagTextLink.tsx","components/FFlagTypeChip.tsx","components/FFlagTable.tsx","components/FFlagData.tsx","components/LifecycleChip.tsx","components/Utterances.tsx","components/EventTable.tsx","pages/About.tsx","App.tsx","pages/Browser.tsx","pages/History.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","grid","left","right","about","HistoryEventType","Header","_this","this","react_default","a","createElement","AppBar_default","color","position","style","flexGrow","Toolbar_default","Typography_default","variant","Tabs_default","value","props","pages","findIndex","page","path","location","pathname","includes","activePath","map","Tab_default","label","title","onClick","history","push","key","Component","withRouter","endpoint","str","allSeries","stripUndefined","obj","Object","entries","forEach","_ref","_ref2","slicedToArray","undefined","getFlags","_x","_x2","_getFlags","apply","arguments","_callee","series","fresh","values","regenerator_default","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","error","stop","getHistory","_x3","_x4","_getHistory","_callee2","flag","query","_context2","querystring","stringify","flagTypes","FFlag","DFFlag","SFFlag","FInt","FString","FLog","DFInt","DFString","DFLog","getFlagType","typeEntry","find","prefix","startsWith","_typeEntry","type","name","slice","length","FFlagTextLink","Link_default","component","p","react_router_dom","assign","to","underline","fontSize","borderBottom","typeStyles","red","LooksOne_default","TextFormat_default","List_default","indigo","blue","Sync_default","deepOrange","SettingsRemote_default","teal","Flag_default","getColor","getIcon","_ref3","makeTheme","memoize","theme","createMuiTheme","FFlagTypeChip","styles","typography","useNextVariants","palette","primary","main","Chip_default","icon","FFlagTable","dist_default","data","flags","currentValue","lastUpdated","Date","toISOString","columns","options","customBodyRender","download","filter","display","searchable","noWrap","fontFamily","whiteSpace","wordBreak","filterOptions","sortDirection","Tooltip_default","toLocaleString","react_moment_dist_default","fromNow","selectableRows","rowsPerPage","rowsPerPageOptions","Infinity","print","filterType","customToolbar","react","IconButton_default","refresh","Refresh_default","FormControl_default","marginLeft","InputLabel_default","htmlFor","Select_default","onChange","e","setSeries","target","input","Input_default","id","MenuItem_default","FFlagData","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hash","window","substr","state","getData","setState","asyncToGenerator","mark","t0","_this2","t1","t2","_this3","Fragment","children","index_es","marginTop","green","Add_default","yellow","Edit_default","Remove_default","LifecycleChip","Utterances","ref","React","createRef","term","script","document","src","async","setAttribute","current","appendChild","EventTable","events","padding","ArrowBack_default","inline","verticalAlign","className","single","meta","rowData","event","time","sort","Utterances_Utterances","Section","paragraphs","paddingTop","paragraph","secondary","FFlagData_FFlagData","FFlagTable_FFlagTable","match","EventTable_EventTable","params","Grid_default","container","justify","item","xs","lg","md","Paper_default","href","alignContent","spacing","textAlign","Button_default","App","CssBaseline_default","components_Header","react_router","exact","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2d414a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"EventTable_grid__28v1h\",\"left\":\"EventTable_left__20GBs\",\"right\":\"EventTable_right__2fBSa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"About_about__2Pz2N\"};","import querystring from 'querystring'\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n  ? '/'\n  : 'http://localhost:8080/'\n\nconst endpoint = (str: string) => BASE_URL + str\n\nexport const allSeries = [\n  'PCDesktopClient',\n  'MacDesktopClient',\n  'PCStudioBootstrapper',\n  'MacStudioBootstrapper',\n  'PCClientBootstrapper',\n  'MacClientBootstrapper',\n  'XboxClient',\n  'AndroidApp',\n  'iOSApp'\n]\n\nexport enum HistoryEventType {\n  Created = 'Created',\n  Removed = 'Removed',\n  Changed = 'Changed'\n}\n\nexport interface Flag {\n  flag: string\n  currentValue?: string\n  lastUpdated?: number\n}\n\nexport interface HistoryEvent {\n  time: number\n  type: HistoryEventType\n  flag: string\n  series: string\n  value?: string\n}\n\nconst stripUndefined = (obj: {[index: string]: any}) => {\n  Object.entries(obj).forEach(([key, value]) => {\n    if (value === undefined) {\n      delete obj[key]\n    }\n  })\n\n  return obj\n}\n\nexport async function getFlags (series: string, fresh?: boolean): Promise<Flag[]> {\n  const values = await (await fetch(endpoint(`flags/${series}${fresh ? '?fresh=true' : ''}`))).json()\n\n  return values.error ? [] : values\n}\n\nexport async function getHistory (series?: string, flag?: string): Promise<HistoryEvent[]> {\n  const query = querystring.stringify(stripUndefined({\n    series, flag\n  }))\n\n  return (await fetch(endpoint(`events?${query}`))).json()\n}\n","import AppBar from '@material-ui/core/AppBar'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport React, { Component } from 'react'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { Page } from '../App'\nimport styles from './Header.module.scss'\n\ninterface HeaderProps extends RouteComponentProps<any> {\n  pages: Page[]\n}\n\nclass Header extends Component<HeaderProps> {\n  render () {\n    return (\n      <AppBar color='primary' position='static' style={{\n        flexGrow: 1\n      }}>\n        <Toolbar>\n          <Typography variant='h6'>\n            Roblox FFlag Watcher\n          </Typography>\n        </Toolbar>\n        <Tabs value={this.props.pages.findIndex(page => (\n          page.path === '/'\n            ? this.props.location.pathname === '/'\n            : this.props.location.pathname.includes(page.activePath || page.path)\n        ))}>\n          {this.props.pages.map(page => (\n            <Tab\n              label={page.title}\n              onClick={() => this.props.history.push(page.activePath || page.path)}\n              key={page.path}\n            />\n          ))}\n        </Tabs>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","const flagTypes = {\n  FFlag: 'Flag',\n  DFFlag: 'Dynamic Flag',\n  SFFlag: 'Synced Flag',\n  FInt: 'Int',\n  FString: 'String',\n  FLog: 'Log',\n  DFInt: 'Dynamic Int',\n  DFString: 'Dynamic String',\n  DFLog: 'Dynamic Log'\n}\n\ninterface FlagType {\n  type?: string\n  name: string\n}\n\nexport function getFlagType (flag: string): FlagType {\n  const typeEntry = Object.entries(flagTypes).find(([prefix]) => flag.startsWith(prefix))\n\n  if (typeEntry) {\n    const [prefix, type] = typeEntry\n\n    return {\n      type,\n      name: flag.slice(prefix.length)\n    }\n  }\n\n  return {\n    name: flag\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { getFlagType } from '../Util'\n\nexport default function FFlagTextLink (flag: string, series: string) {\n  return (\n    <Link\n      component={\n        (p: any) => <RouterLink to={`/history/${series}/${flag}`} {...p} />\n      }\n      color='inherit'\n      underline='none'\n      style={{\n        fontSize: 14,\n        borderBottom: '1px dotted silver'\n      }}\n    >\n      {getFlagType(flag).name}\n    </Link>\n  )\n}\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core'\nimport Chip from '@material-ui/core/Chip'\nimport blue from '@material-ui/core/colors/blue'\nimport deepOrange from '@material-ui/core/colors/deepOrange'\nimport indigo from '@material-ui/core/colors/indigo'\nimport red from '@material-ui/core/colors/red'\nimport teal from '@material-ui/core/colors/teal'\nimport Sync from '@material-ui/icons/Sync'\nimport List from '@material-ui/icons/List'\nimport LooksOne from '@material-ui/icons/LooksOne'\nimport SettingsRemote from '@material-ui/icons/SettingsRemote'\nimport TextFormat from '@material-ui/icons/TextFormat'\nimport Flag from '@material-ui/icons/Flag'\nimport React from 'react'\nimport memoize from 'fast-memoize'\n\nconst typeStyles: [string, typeof blue, JSX.Element][] = [\n  ['Dynamic Int', red, <LooksOne />],\n  ['Dynamic String', red, <TextFormat />],\n  ['Dynamic Log', red, <List />],\n  ['Int', indigo, <LooksOne />],\n  ['Log', indigo, <List />],\n  ['String', indigo, <TextFormat />],\n  ['Synced', blue, <Sync />],\n  ['Dynamic', deepOrange, <SettingsRemote />],\n  ['Flag', teal, <Flag />]\n]\n\nconst getColor = (name: string) => (typeStyles.find(([color]) => name.includes(color)) || [])[1]\n\nconst getIcon = (name: string) => (typeStyles.find(([color]) => name.includes(color)) || [])[2]\n\nconst makeTheme = memoize((theme: any) => createMuiTheme(theme))\n\nexport default function FFlagTypeChip (type: string) {\n  return type && type.length > 0 ?\n    <MuiThemeProvider theme={makeTheme({\n      typography: {\n        useNextVariants: true\n      },\n      palette: {\n        primary: getColor(type) || {\n          main: '#ccc'\n        }\n      }\n    })}>\n      <Chip\n        label={type}\n        color='primary'\n        icon={getIcon(type)}\n      />\n    </MuiThemeProvider>\n  : ''\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport IconButton from '@material-ui/core/IconButton'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport MUIDataTable from 'mui-datatables'\nimport React, { Component, Fragment } from 'react'\nimport Moment from 'react-moment'\nimport { allSeries, Flag } from '../api'\nimport { getFlagType } from '../Util'\nimport { FFlagDataCallbacks } from './FFlagData'\nimport FFlagTextLink from './FFlagTextLink'\nimport FFlagTypeChip from './FFlagTypeChip'\n\nexport interface FFlagTableProps {\n  flags: Flag[]\n  series: string\n}\n\nconst columns = (props: FFlagTableProps) => [\n  {\n    name: 'Type',\n    options: {\n      customBodyRender: FFlagTypeChip,\n      download: false\n    }\n  },\n  {\n    name: 'Flag',\n    options: {\n      filter: false,\n      download: false,\n      customBodyRender: (flag: string) => FFlagTextLink(flag, props.series)\n    }\n  },\n  {\n    name: 'Full Name',\n    options: {\n      filter: false,\n      display: false,\n      searchable: true\n    }\n  },\n  {\n    name: 'Value',\n    options: {\n      customBodyRender: (value: string) => (\n        <Typography noWrap={true} style={{\n          fontFamily: 'monospace',\n          fontSize: 14,\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-all'\n        }}>{value}</Typography>\n      ),\n      filterOptions: ['True', 'False']\n    }\n  },\n  {\n    name: 'Last Changed',\n    options: {\n      filter: false,\n      sortDirection: 'desc',\n      searchable: false,\n      customBodyRender: (value: string) => (\n        value.length > 0\n          ? <Tooltip title={new Date(value).toLocaleString()}>\n              <Moment fromNow>{value}</Moment>\n            </Tooltip>\n          : <Tooltip title='Created before tracking began'>\n              <Typography style={{\n                color: 'silver'\n              }}>unknown</Typography>\n            </Tooltip>\n      )\n    }\n  }\n]\n\nexport default class FFlagTable extends Component<FFlagTableProps & FFlagDataCallbacks> {\n  render () {\n    return (\n      <MUIDataTable\n        title='Fast Flags'\n        data={this.props.flags.map(flag => {\n          const { type } = getFlagType(flag.flag)\n\n          return [\n            type || '',\n            flag.flag,\n            flag.flag,\n            flag.currentValue || '',\n            flag.lastUpdated ? new Date(flag.lastUpdated).toISOString() : ''\n          ]\n        })}\n        columns={columns(this.props) as any}\n        options={{\n          selectableRows: false,\n          rowsPerPage: 30,\n          rowsPerPageOptions: [10, 30, 50, 100, 300, 500, 1000, Infinity],\n          print: false,\n          filterType: 'multiselect',\n          customToolbar: () => (\n            <Fragment>\n              <IconButton onClick={this.props.refresh}>\n                <RefreshIcon />\n              </IconButton>\n              <FormControl style={{\n                marginLeft: 10\n              }}>\n                <InputLabel htmlFor='series'>Platform/Application</InputLabel>\n                <Select\n                  value={this.props.series}\n                  onChange={(e) => this.props.setSeries(e.target.value)}\n                  input={\n                    <Input name='series' id='series' />\n                  }\n                >\n                {allSeries.map((series) => (\n                  <MenuItem value={series}>{series}</MenuItem>\n                ))}\n                </Select>\n              </FormControl>\n            </Fragment>\n          )\n        }}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { getFlags, Flag, allSeries } from '../api'\nimport { LinearProgress } from '@material-ui/core'\nimport { FFlagTableProps } from './FFlagTable'\n\nexport interface FFlagDataCallbacks {\n  refresh: () => any\n  setSeries: (series: string) => any\n}\n\ninterface FFlagDataProps {\n  children: (options: FFlagTableProps & FFlagDataCallbacks) => JSX.Element\n}\n\ninterface FFlagDataState {\n  flags?: Flag[]\n  series: string\n}\n\nexport default class FFlagData extends Component<FFlagDataProps, FFlagDataState> {\n  constructor (props: FFlagDataProps) {\n    super(props)\n\n    const hash = window.location.hash.substr(1)\n\n    this.state = {\n      series: allSeries.includes(hash) ? hash : allSeries[0]\n    }\n  }\n\n  async componentDidMount () {\n    return this.getData()\n  }\n\n  async getData (fresh?: boolean) {\n    if (this.state.series !== allSeries[0]) {\n      window.location.hash = `#${this.state.series}`\n    }\n\n    this.setState({\n      flags: undefined\n    }, async () => {\n      this.setState({\n        flags: await getFlags(this.state.series, fresh)\n      })\n    })\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        {\n          this.state.flags\n            ? this.props.children({\n              flags: this.state.flags,\n              series: this.state.series,\n              refresh: () => this.getData(true),\n              setSeries: (series) => this.setState({ series }, this.getData)\n            })\n            : (\n              <LinearProgress style={{\n                marginTop: 2\n              }} />\n            )\n        }\n      </React.Fragment>\n    )\n  }\n}\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core'\nimport Chip from '@material-ui/core/Chip'\nimport blue from '@material-ui/core/colors/blue'\nimport green from '@material-ui/core/colors/green'\nimport red from '@material-ui/core/colors/red'\nimport yellow from '@material-ui/core/colors/yellow'\nimport Add from '@material-ui/icons/Add'\nimport Edit from '@material-ui/icons/Edit'\nimport Remove from '@material-ui/icons/Remove'\nimport memoize from 'fast-memoize'\nimport React from 'react'\n\nconst typeStyles: [string, typeof blue, JSX.Element][] = [\n  ['Created', green, <Add />],\n  ['Changed', yellow, <Edit />],\n  ['Removed', red, <Remove />]\n]\n\nconst getColor = (name: string) => (typeStyles.find(([color]) => name.includes(color)) || [])[1]\n\nconst getIcon = (name: string) => (typeStyles.find(([color]) => name.includes(color)) || [])[2]\n\nconst makeTheme = memoize((theme: any) => createMuiTheme(theme))\n\nexport default function LifecycleChip (type: string) {\n  return type && type.length > 0 ?\n    <MuiThemeProvider theme={makeTheme({\n      typography: {\n        useNextVariants: true\n      },\n      palette: {\n        primary: getColor(type) || {\n          main: '#ccc'\n        }\n      }\n    })}>\n      <Chip\n        label={type}\n        color='primary'\n        icon={getIcon(type)}\n      />\n    </MuiThemeProvider>\n  : ''\n}\n","import React from 'react'\n\ninterface UtterancesProps {\n  term: string\n}\n\nexport default class Utterances extends React.Component<UtterancesProps> {\n  private ref: any\n\n  constructor (props: UtterancesProps) {\n    super(props)\n\n    this.ref = React.createRef()\n  }\n\n  componentDidMount () {\n    const { term } = this.props\n\n    const script = document.createElement('script')\n    script.src = 'https://utteranc.es/client.js'\n    script.async = true\n    script.setAttribute('repo', 'evaera/Roblox-FFlag-Watcher')\n    script.setAttribute('crossorigin', 'anonymous')\n    script.setAttribute('label', 'comment')\n    script.setAttribute('theme', 'github-dark')\n    script.setAttribute('issue-term', term)\n\n    this.ref.current.appendChild(script)\n  }\n\n  render () {\n    return <div ref={this.ref}></div>\n  }\n}\n","import { LinearProgress } from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport MUIDataTable from 'mui-datatables'\nimport React, { Component } from 'react'\nimport Moment from 'react-moment'\nimport { Link } from 'react-router-dom'\nimport { getHistory, HistoryEvent } from '../api'\nimport FFlagTextLink from './FFlagTextLink'\nimport LifecycleChip from './LifecycleChip'\nimport Utterances from './Utterances'\nimport styles from './EventTable.module.scss'\nimport FFlagTypeChip from './FFlagTypeChip'\nimport { getFlagType } from '../Util'\n\ninterface EventTableProps {\n  series?: string\n  flag?: string\n}\n\ninterface EventTableState {\n  events?: HistoryEvent[]\n}\n\nconst columns = (single: boolean) => [\n  {\n    name: 'Event',\n    options: {\n      customBodyRender: LifecycleChip\n    }\n  },\n  {\n    name: 'Series',\n    options: {\n      display: !single\n    }\n  },\n  {\n    name: 'Type',\n    options: {\n      customBodyRender: FFlagTypeChip,\n      download: false,\n      display: !single\n    }\n  },\n  {\n    name: 'Flag',\n    options: {\n      display: !single,\n      customBodyRender: (flag: string, meta: any) => (\n        FFlagTextLink(flag, meta.rowData[1])\n      ),\n      download: false\n    }\n  },\n  {\n    name: 'Full Name',\n    options: {\n      display: false\n    }\n  },\n  {\n    name: 'Value',\n    options: {\n      customBodyRender: (value: string) => (\n        <Typography noWrap={true} style={{\n          fontFamily: 'monospace',\n          fontSize: 14,\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-all'\n        }}>{value}</Typography>\n      ),\n      filterOptions: ['True', 'False']\n    }\n  },\n  {\n    name: 'Time',\n    options: {\n      customBodyRender: (value: string) => (\n        <Tooltip title={new Date(value).toLocaleString()}>\n          <Moment fromNow>{value}</Moment>\n        </Tooltip>\n      )\n    }\n  }\n]\n\nexport default class EventTable extends Component<EventTableProps, EventTableState> {\n  constructor (props: EventTableProps) {\n    super(props)\n\n    this.state = {}\n  }\n\n  async componentDidMount () {\n    return this.getData()\n  }\n\n  async getData () {\n    this.setState({\n      events: undefined\n    }, async () => {\n      this.setState({\n        events: await getHistory(this.props.series, this.props.flag)\n      })\n    })\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        {this.props.series && (\n          <div style={{\n            padding:  20\n          }}>\n            <Link\n              to='/history'\n            >\n              <IconButton>\n                <BackIcon />\n              </IconButton>\n            </Link>\n            <Typography\n              variant='h5'\n              inline={true}\n              style={{\n                verticalAlign: 'middle',\n                marginLeft: 10\n              }}\n            >\n            {`${this.props.flag || this.props.series} `}\n            {this.props.flag && (\n              <small style={{\n                color: '#999'\n              }}>{this.props.series}</small>\n            )}\n            </Typography>\n          </div>\n        )}\n        <div className={`${this.props.flag && styles.grid}`}>\n          <div className={styles.left}>\n          {\n            this.state.events\n              ? <MUIDataTable\n                title='Event History'\n                columns={columns(!!this.props.flag) as any}\n                data={this.state.events.map(event => [\n                  event.type,\n                  event.series,\n                  getFlagType(event.flag).type,\n                  event.flag,\n                  event.flag,\n                  event.value || '',\n                  event.time\n                ])}\n                options={{\n                  selectableRows: false,\n                  sort: false,\n                  print: false,\n                  rowsPerPage: 100\n                }}\n              />\n              : (\n                <LinearProgress style={{\n                  marginTop: 2\n                }} />\n              )\n          }\n          </div>\n          { this.props.flag && <div className={styles.right}>\n            <Utterances\n              term={`${this.props.series}: \"${this.props.flag}\"`}\n            />\n          </div>}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n","import Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport React from 'react'\nimport styles from './About.module.scss'\nimport FFlagTypeChip from '../components/FFlagTypeChip'\n\nfunction Section ({ title, paragraphs, variant }: {title: string, paragraphs: (string | JSX.Element)[], variant?: 'h4' | 'h5'}) {\n  return (\n    <React.Fragment>\n      <Typography variant={variant || 'h4'} style={{\n        paddingTop: variant === 'h5' ? 0 : 30\n      }}>{title}</Typography>\n      {paragraphs.map(p => (\n        <Typography paragraph style={{\n          fontSize: 16,\n          paddingTop: 10\n        }}>\n        {p}\n        </Typography>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default function About () {\n  return (\n    <Grid container justify='center' className={styles.about}>\n      <Grid item xs={12} lg={5} md={8}>\n        <Paper style={{\n          padding: 40\n        }}>\n          <Typography variant='h3'>Roblox FFlag Watcher</Typography>\n          <Typography variant='subheading'>By <Link href='https://eryn.io'>evaera</Link></Typography>\n\n          <Grid container justify='center' alignContent='center' spacing={16}>\n            <Grid item xs={6} style={{\n              textAlign: 'right'\n            }}>\n              <Button variant='raised' color='primary' href='https://github.com/evaera/Roblox-FFlag-Watcher'>GitHub Repository</Button>\n            </Grid>\n            <Grid item xs={6} style={{\n              textAlign: 'left'\n            }}>\n              <Button variant='raised' color='secondary' href='https://www.patreon.com/erynlynn'>Support on Patreon</Button>\n            </Grid>\n          </Grid>\n\n          <Section\n            title='What is a Fast Flag?'\n            paragraphs={[\n              'The Roblox engine uses a system called Fast Flags as part of its deployment process. When code is shipped, not all of it is active by default. Rather, the changes are suppressed by flags that are dynamically enabled and disabled, even after the code is live on production.'\n            ]}\n          />\n          <Section\n            title='Types of Fast Flags'\n            paragraphs={[\n              \"There are several different kinds of Fast Flags. However, it's possible to separate them into two groups: Dynamic Fast Flags (DFFlags)and regular Fast Flags (FFlags).\",\n              <Section\n                title='Fast Flags'\n                variant='h5'\n                paragraphs={[\n                  'Standard FFlags are fetched on client startup and do not change thereafter.',\n                  <div>\n                    {FFlagTypeChip('Flag')}\n                    {' '}\n                    {FFlagTypeChip('Int')}\n                    {' '}\n                    {FFlagTypeChip('String')}\n                    {' '}\n                    {FFlagTypeChip('Log')}\n                  </div>\n                ]}\n              />,\n              <Section\n                title='Dynamic Fast Flags'\n                variant='h5'\n                paragraphs={[\n                  'DFFlags are fetched every 5 minutes and can change any number of times while the game is running.',\n                  <div>\n                    {FFlagTypeChip('Dynamic Flag')}\n                    {' '}\n                    {FFlagTypeChip('Dynamic Int')}\n                    {' '}\n                    {FFlagTypeChip('Dynamic String')}\n                    {' '}\n                    {FFlagTypeChip('Dynamic Log')}\n                  </div>\n                ]}\n              />,\n              <Section\n                title='Synchronized Fast Flags'\n                variant='h5'\n                paragraphs={[\n                  'SFFlags are synced to the client from the server. They are fetched at server startup, and the client receives whatever value the server currently has.',\n                  <div>\n                    {FFlagTypeChip('Synced Flag')}\n                  </div>\n                ]}\n              />\n            ]}\n          />\n\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css'\nimport Header from './components/Header'\nimport Browser from './pages/Browser'\nimport History from './pages/History'\nimport About from './pages/About'\n\nexport const theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#ab47bc'\n    },\n    secondary: {\n      main: '#f48fb1'\n    }\n  }\n})\n\nexport interface Page {\n  path: string,\n  component: (...args: any[]) => JSX.Element,\n  title: string\n  activePath?: string\n}\n\nconst pages: Page[] = [\n  {\n    path: '/',\n    component: Browser,\n    title: 'Browser'\n  },\n  {\n    path: '/history/:series?/:flag?',\n    activePath: '/history',\n    component: History,\n    title: 'History'\n  },\n  {\n    path: '/about',\n    component: About,\n    title: 'About'\n  }\n]\n\nclass App extends Component {\n  render () {\n    return (\n      <Router>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Header pages={pages} />\n          {pages.map(page => (\n            <Route\n              exact={page.path === '/'}\n              path={page.path}\n              component={page.component}\n              key={page.path}\n            />\n          ))}\n        </MuiThemeProvider>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","import Grid from '@material-ui/core/Grid'\nimport FFlagTable from '../components/FFlagTable'\nimport FFlagData from '../components/FFlagData'\nimport React from 'react'\n\nexport default function Browser () {\n  return (\n    <FFlagData>\n      {(options) => (\n        <FFlagTable {...options} />\n      )}\n    </FFlagData>\n  )\n}\n","import React from 'react'\nimport EventTable from '../components/EventTable'\nimport { match } from 'react-router-dom'\n\ninterface HistoryParams {\n  series?: string\n  flag?: string\n}\n\nexport default function History ({ match }: { match: match<HistoryParams> }) {\n  return (\n    <EventTable\n      series={match.params.series}\n      flag={match.params.flag}\n      key={`${match.params.series}:${match.params.flag}`}\n    />\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}